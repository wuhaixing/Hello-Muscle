import org.apache.tools.ant.filters.ReplaceTokens

defaultTasks "build"

    apply plugin: 'java'
    apply plugin: 'war'
    apply plugin: 'project-reports'
    apply plugin: 'eclipse'
    apply plugin: 'jetty'
    apply plugin: 'aspectj'
    version = '1.0.0'
  
    springVersion = '3.0.5.RELEASE'
    wicketVersion = '1.4.17'
    jettyVersion = '6.1.25'

    sourceCompatibility = 1.6
    targetCompatibility = 1.6
    
    group = 'com.xinlv.portal'
    configurations {
        compile.transitive = true
        testCompile.transitive = true
    }

    sourceSets {
        main {
          resources {
              srcDir 'src/main/resources'
              srcDir 'src/main/java'
          }
        }
        test {
          resources {
              srcDir 'src/test/resources'
              srcDir 'src/test/java'
          }
        }
    }

    repositories {
        mavenCentral()
        mavenRepo(urls: 'http://wicketstuff.org/maven/repository')
        mavenRepo(urls: 'http://repository.jboss.com/maven2')
        mavenRepo(urls: 'http://m2.neo4j.org/')
        mavenRepo(urls: 'http://maven.springframework.org/release')
        mavenRepo(urls: 'http://maven.springframework.org/milestone')
        mavenRepo(urls: 'http://maven.springframework.org/snapshot')
    }
    
    dependencies {
        compile  "org.apache.wicket:wicket:$wicketVersion"
        compile  "org.apache.wicket:wicket-extensions:$wicketVersion"
        compile  "org.apache.wicket:wicket-spring:$wicketVersion"
        compile  "org.apache.wicket:wicket-datetime:$wicketVersion"
        compile  'org.slf4j:slf4j-log4j12:1.5.8'
        compile  'oswego-concurrent:concurrent:1.3.4'

        compile  "org.springframework:spring-core:$springVersion"
        compile  "org.springframework:spring-beans:$springVersion"
        compile  "org.springframework:spring-web:$springVersion"
        compile  "org.springframework:spring-context:$springVersion"
        compile  "org.springframework:spring-aop:$springVersion"
        compile  "org.springframework:spring-aspects:$springVersion"
        compile  "org.springframework:spring-tx:$springVersion"
        compile  "org.springframework.security:spring-security-web:$springVersion"
        compile  "org.springframework.security:spring-security-config:$springVersion"
        compile  'org.springframework.integration:spring-integration-mail:1.0.3.RELEASE'
        compile  'org.springframework:spring-mock:2.0.8'
        compile  'org.springframework.data:spring-data-neo4j:1.0.0.RC1'
        compile  'org.springframework.data:spring-data-commons-core:1.0.0.RC1'
        compile  "org.springframework:spring-test:$springVersion"
        

        compile  'commons-lang:commons-lang:2.5'
        compile  'commons-httpclient:commons-httpclient:3.1'
        compile  'com.thoughtworks.xstream:xstream:1.3.1'
        compile  'commons-io:commons-io:1.4'
        compile  'rome:rome:0.9'
        
	    ajc      'aspectj:aspectjtools:1.5.3'
		compile  'aspectj:aspectjrt:1.5.3'
		compile  'aspectj:aspectjtools:1.5.3'
		
        testCompile     'junit:junit:4.8.1'
        testCompile     'org.easymock:easymock:3.0'
		
		
        // provided
        providedDeps = [
           'javax.activation:activation:1.1.1',
           'javax.servlet:servlet-api:2.5',
           "org.mortbay.jetty:jetty:$jettyVersion",
           "org.mortbay.jetty:jetty-util:$jettyVersion",
           "org.mortbay.jetty:jetty-management:$jettyVersion",
           "org.mortbay.jetty:jetty-naming:$jettyVersion",
           "org.mortbay.jetty:jetty-plus:$jettyVersion",
           'javax.servlet:servlet-api:2.5',
           'javax.mail:mail:1.4']
        
		compile providedDeps
		
		runtime     'org.neo4j:neo4j-kernel:1.3.M05'
    }

    // filtering resources
    processResources {
        // copy the rest and filter
        from(sourceSets.main.resources.srcDirs) {
            filter(ReplaceTokens, tokens: [xinlvVersion: project.version])
            include '**/*.xml'
        }
        // copy images
        from(sourceSets.main.resources.srcDirs) {
            exclude '**/*.xml'
        }
    }


